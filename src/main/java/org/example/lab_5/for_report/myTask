Ex-1:
    1.	Словесная постановка задачи: Вывести все натуральные числа от 1 до n, где n - заданное натуральное число.

    2.	Виды данных:
            Входные данные: натуральное число n.
            Выходные данные: последовательность чисел от 1 до n.

    3.	Математическая постановка задачи: Для заданного натурального числа n, необходимо сгенерировать и вывести последовательность ai где i=1,2,...,ni=1,2,...,n

    4.	Реализация алгоритма: Использование рекурсивного метода для вывода чисел

    5.	Исследование вычислительной сложности: Основная вычислительная сложность алгоритма состоит в количестве рекурсивных вызовов,
        которое равно n. Таким образом, вычислительная сложность алгоритма - O(n)

_________

Ex-2:
    1.	Словесная постановка задачи: Необходимо найти первое вхождение подстроки в заданной строке.

    2.	Виды данных:
            Входные данные: две строки - исходная строка text и искомая подстрока pattern.
            Выходные данные: индекс первого вхождения подстроки в строку. Если подстрока не найдена, возвращается -1

    3.	Математическая постановка задачи: Для заданных строк text и pattern, необходимо найти такой минимальный индекс i,
        что подстрока text начиная с i совпадает с pattern. Если такого i не существует, возвращается -1

    4.	Реализация алгоритма:Наивный алгоритм поиска подстроки проверяет наличие подстроки pattern в строке text,
        сравнивая каждый символ подстроки с символами в строке начиная с каждой позиции

    5.	Исследование вычислительной сложности: Вычислительная сложность наивного алгоритма в худшем
        случае составляет O((n−m+1)m), где n - длина строки text, а m - длина подстроки pattern.
